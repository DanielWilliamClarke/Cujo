# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1
  # https://circleci.com/developer/images/image/cimg/rust
  rust: circleci/rust@1.5.0

jobs:
  test-build-rust:
    docker:
      - image: cimg/rust:1.53.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup Dependencies
          command: |
            cargo --version
            rustup default nightly
            sudo apt-get update -y
            sudo apt-get install -y libssl-dev
            cargo install cargo2junit
      - run:
          name: Run Tests
          command: |
            cd service
            cargo test -- -Z unstable-options --format json | cargo2junit > results.xml
      - store_test_results:
          path: ./service
      - run:
          name: Build Docker image
          command: |
            cd service
            docker build -t $DOCKER_REGISTRY/$IMAGE_NAME_RUST:latest .

  push-rust-image:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - setup_remote_docker
      - run:
          name: Publish Docker Image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push $DOCKER_REGISTRY/$IMAGE_NAME_RUST:latest

  test-build-portfolio:
    docker:
      - image: cimg/node:15.1
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run tests
          command: |
            cd portfolio
            npm install
            npm test
            npm build
      - store_test_results:
          path: ./portfolio
      - run:
          name: Build Docker image
          command: |
            cd portfolio
            docker build -t $DOCKER_REGISTRY/$IMAGE_NAME_PORTFOLIO:latest .

  push-portfolio-image:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - setup_remote_docker
      - run:
          name: Publish Docker Image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push $DOCKER_REGISTRY/$IMAGE_NAME_PORTFOLIO:latest

workflows:
  rust:
    jobs:
      - test-build-rust:
          filters:
            branches:
              only: master
      - push-rust-image:
          requires:
            - test-build-rust
          filters:
            branches:
              only: master

  portfolio:
    jobs:
      - test-build-portfolio:
          filters:
            branches:
              only: master
      - push-portfolio-image:
          requires:
            - test-build-portfolio
          filters:
            branches:
              only: master
